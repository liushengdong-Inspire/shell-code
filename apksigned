#!/usr/bin/env bash

## 使用菜单
function Use_menu
{
	echo "-------------------------------------------"
	echo "命令参数不合法!"
	echo "`basename ${1}` 使用方法如下："
	echo "`basename ${1}` [apk 源] <签名apk存放地址>"
	echo "如果参数只有一个，默认会在当前目录下签名APK"
	echo "-------------------------------------------"
}

function Create_src_apk_path
{
	current_path=$1
	source_apk=$2
	source_apk_name=`basename ${source_apk}`
	apk_name=${source_apk_name%%.apk*}
	signed_apk_name=${apk_name}_signed.apk
	if [ -f ${current_path}/${signed_apk_name} ]
	then
		rm -rf ${current_path}/${signed_apk_name}
	fi
	CURRENT_SIGNED_PATH=${current_path}/${signed_apk_name}
}

function Source_apk_exist
{
	## 添加对参数的判断，判断是否为 APK
	source_apk_path=$1
	last_is_apk=${source_apk_path##.apk*}
	apk_add=$(echo ${last_is_apk} | grep ".apk")
	if [ "${apk_add}" == "" ]
	then
		echo "输入的文件不是 APK 文件!"
		exit 0
	fi
	
	if [ ! -f ${source_apk_path} ]
	then
		echo "未签名的源文件不存在!"
		exit 0
	fi	
	
}

CURRENT_SIGNED_PATH=""
SIGNED_TOOL_PATH=""
PLATFORM_PK8=""
PLATFORM_X509_PEM=""
SIGNAPK_JAR=""

## 判断是否携带参数，至少携带一个参数
if [[ $# -ge 1 && $# -lt 3 ]]
then

	## 判断输入的未签名的源文件是否存在以及是否为 APK 文件
	Source_apk_exist $1

	bin_path=""
	current_bin_path=`basename $0`
	## 获取命令的路径
	if [ "$0" == "${current_bin_path}" ]
	then
		current_bin_path=`which apksigned`
		bin_path=${current_bin_path%/*}
	elif [ "$0" != "${current_bin_path}" ]
	then
		current_bin_path=$0
		bin_path=${current_bin_path%/*}
	fi
	SIGNED_TOOL_PATH=${bin_path}/javasigned
	PLATFORM_PK8=${SIGNED_TOOL_PATH}/platform.pk8
	PLATFORM_X509_PEM=${SIGNED_TOOL_PATH}/platform.x509.pem
	SIGNAPK_JAR=${SIGNED_TOOL_PATH}/signapk.jar

	if [ "$1" == "$2" ]
	then
		echo "源文件 $1 和输出签名文件 $2 一致!!!"
		exit 0
	fi

	## 携带了一个参数或者携带的第二个参数是目录时
	## 在当前目录或者传入的目录中自动生成 _signed 的签名文件	
	if [[ "$2" == "" || -d "$2" ]]
	then
		cmd_path=$2
		if [ "${cmd_path}" == "" ]
		then
			cmd_path=`pwd`
		fi

		Create_src_apk_path ${cmd_path} $1
	## 参数2不为空，也不是目录的情况下
	else
		## 判断是否需要前面为APK后缀
		src_path=$2
		filetype_name=${src_path##.apk*}
		result=$(echo ${filetype_name} | grep ".apk")
		if [ "$result" == "" ]
		then
			echo "文件输出类型不是APK文件!"
			exit 0
		fi
		
		if [ -f "$2" ]
		then
			rm -rf $2
		fi
		CURRENT_SIGNED_PATH=$2
	fi
	if [[ -f ${SIGNAPK_JAR} && -f ${PLATFORM_X509_PEM} && -f ${PLATFORM_PK8}  ]]
	then
		java -jar ${SIGNAPK_JAR} ${PLATFORM_X509_PEM} ${PLATFORM_PK8} ${1} ${CURRENT_SIGNED_PATH}
		echo "源文件: ${1}"
		echo "签名为: ${CURRENT_SIGNED_PATH}"
		exit 0
	else
		echo "签名工具参数错误:${SIGNAPK_JAR} - ${PLATFORM_X509_PEM} - ${PLATFORM_PK8}"
	fi
else
	Use_menu $0
fi

